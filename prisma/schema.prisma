generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  username String  @unique
  name     String
  bio      String?
  password String
  imageId  String?
  imageUrl String
  Posts    Posts[]
  liked    Posts[] @relation("likedBy") // Posts the user has liked
  Saved    Saved[] // Posts the user saved
}

model Posts {
  id       Int     @id @default(autoincrement())
  caption  String?
  likes    Int?
  imageId  String?
  imageUrl String?

  // Relation to the author (user who created the post)
  authorId Int
  author   User @relation(fields: [authorId], references: [id], onDelete: Cascade)

  Tags    Tags[]
  likedBy User[]  @relation("likedBy") // Users who liked the post
  Saved   Saved[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@index([caption, created_at(sort: Desc)])
}

model Tags {
  id    Int     @id @default(autoincrement())
  name  String
  Posts Posts[] // Posts tagged with this tag
}

model Saved {
  id     Int @id @default(autoincrement())
  userId Int // User who saved the post
  postId Int // Saved post

  // Relations for user and post
  user User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Posts @relation(fields: [postId], references: [id], onDelete: Cascade)

  // Ensure that each user can save a post only once
  @@unique([userId, postId])
}
